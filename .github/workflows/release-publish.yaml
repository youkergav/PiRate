name: Release and Publish

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.rp.outputs.release_created }}
      tag_name: ${{ steps.rp.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - id: rp
        uses: googleapis/release-please-action@v4
        with:
          release-type: python
          path: .
          target-branch: main

      - name: Show release-please outputs
        run: |
          echo "release_created=${{ steps.rp.outputs.release_created }}"
          echo "tag_name='${{ steps.rp.outputs.tag_name }}'"

  upload-artifacts:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    runs-on: ubuntu-24.04-arm
    env:
      TAG: ${{ needs.release-please.outputs.tag_name }}
    steps:
      - name: Derive VER from TAG
        run: |
          echo "TAG=${TAG}"
          echo "VER=${TAG#v}" >> "$GITHUB_ENV"

      - uses: actions/checkout@v4
        with:
          ref: ${{ env.TAG }}
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Verify pyproject.toml matches tag
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          CURRENT=$(poetry version -s)
          if [ "$CURRENT" != "${VER}" ]; then
            echo "pyproject.toml version ($CURRENT) != tag (${VER}). Did you merge the Release PR?" >&2
            exit 1
          fi

      - uses: docker/setup-buildx-action@v3

      - name: Build (wheel + image) with Docker
        run: |
          mkdir -p dist && sudo chown -R 4000:4000 dist
          docker compose -f tools/build/docker-compose.yml run --rm pirate-image-gen
          ls -lh dist

      - name: Sanity-check expected files
        run: |
          test -f dist/pirate-${{ env.VER }}-*.whl
          test -f dist/pirate-${{ env.VER }}.img
          test -f dist/SHA256SUMS.txt

      - name: Upload artifacts to the release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          files: |
            dist/pirate-${{ env.VER }}-*.whl
            dist/pirate-${{ env.VER }}.img
            dist/SHA256SUMS.txt
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}